plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id("org.jetbrains.dokka") version("1.9.0")
}

android {
    namespace 'org.avmedia.gshockapi'
    compileSdk 34

    defaultConfig {
        minSdk 24
        targetSdk 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.12.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Nordicsemi ble
    implementation 'no.nordicsemi.android.kotlin.ble:scanner:1.0.16'
    implementation 'no.nordicsemi.android.kotlin.ble:client:1.0.16'
    implementation 'no.nordicsemi.android:ble:2.7.3'

    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'com.google.code.gson:gson:2.10'

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:2.2.8"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
}

dokkaHtml.configure {

    outputDirectory.set(file("${rootDir}/docs"))

    dokkaSourceSets {
        configureEach {
            includes.from("module.md")

            includeNonPublic.set(false)
            skipDeprecated.set(true)
            reportUndocumented.set(false) // Emit warnings about not documented members

            perPackageOption {
                matchingRegex.set(".*ble")
                suppress.set(true)
            }
            perPackageOption {
                matchingRegex.set(".*casio")
                suppress.set(true)
            }
            perPackageOption {
                matchingRegex.set(".*utils")
                suppress.set(true)
            }
        }
    }
}